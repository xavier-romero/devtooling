---
- name: Git clone SCL repo
  ansible.builtin.git:
    repo: https://github.com/get-smooth/crypto-lib.git
    dest: "{{ work_dir }}/scl"
    version: "c55965773c9fbb21bd3d037c2d027907456a6149"

- name: Deploying SCL
  ansible.builtin.shell: |
    pushd {{ work_dir }}/scl || exit 1
    forge build
    pushd out/ || exit 1

    find . -type f | grep SCL_ | grep -vi test | grep -vi deploy | while read contract ; do
        bn="$(basename $contract)"
        echo "Deploying SCL: $bn" &>> {{ log_file }}
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json --create $(jq -r '.bytecode.object' $contract) | tee -a {{ log_file }} > {{ work_dir }}/$bn.deploy.out
    done

    popd
    popd
  args:
    executable: /bin/bash

- name: Testing SHA512 - HashLE
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting SHA512 Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_sha512.json.deploy.out)" "HashLE(uint256)" 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_sha512.json.deploy.out)" "HashLE(uint256)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_sha512.json.deploy.out)" "HashLE(uint256)" "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto SHA512 - HashLE

- name: Testing EIP6565 - BasePointMultiply
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 BasePointMultiply Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply(uint256)" 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply(uint256)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply(uint256)" "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - BasePointMultiply

- name: Testing EIP6565 - BasePointMultiply_Edwards
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 BasePointMultiply_Edwards Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply_Edwards(uint256)" 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply_Edwards(uint256)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "BasePointMultiply_Edwards(uint256)" "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - BasePointMultiply_Edwards


- name: Testing EIP6565 - ExpandSecret
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 ExpandSecret Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ExpandSecret(uint256)" 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ExpandSecret(uint256)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ExpandSecret(uint256)" "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - ExpandSecret

- name: Testing EIP6565 - SetKey
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 SetKey Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SetKey(uint256)" 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SetKey(uint256)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SetKey(uint256)" "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - SetKey

- name: Testing EIP6565 - HashInternal
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 HashInternal Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "HashInternal(uint256,uint256,string)" 0 0 "" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "HashInternal(uint256,uint256,string)" 115792089237316195423570985008687907853269984665640564039457584007913129639935 115792089237316195423570985008687907853269984665640564039457584007913129639935 "abcd1234" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "HashInternal(uint256,uint256,string)" \
        115792089237316195423570985008687907853269984665640564039457584007913129639935 115792089237316195423570985008687907853269984665640564039457584007913129639935 \
        "00112233445566778899AABBCCDDEEFF" &>> {{ log_file }}

    hash_value="00112233445566778899AABBCCDDEEFF"
    for i in {1..{{ exponential_growth_limit }}}; do
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "HashInternal(uint256,uint256,string)" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "$hash_value" &>> {{ log_file }}
        hash_value="$hash_value$hash_value"
    done

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "HashInternal(uint256,uint256,string)" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" "abc123" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - HashInternal

# Get a public key
# cast call --rpc-url http://127.0.0.1:32873 0x0a1a630f85f9e58b345f6cb9197c51fa1db01639 'SetKey(uint256)(uint256[5],uint256[2])' "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")"
- name: Testing EIP6565 - Sign
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 Sign Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Sign(uint256,uint256[2],string)" 0 "[0,0]" "abc123" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Sign(uint256,uint256[2],string)" 1 "[0,0]" "abc123" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Sign(uint256,uint256[2],string)" \
        115792089237316195423570985008687907853269984665640564039457584007913129639935 \
        "[115792089237316195423570985008687907853269984665640564039457584007913129639935,115792089237316195423570985008687907853269984665640564039457584007913129639935]" \
        "abc123" &>> {{ log_file }}

    hash_value="00112233445566778899AABBCCDDEEFF"
    for i in {1..{{ exponential_growth_limit }}}; do
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Sign(uint256,uint256[2],string)" \
            27066115479399555241574240779398896927011581316434074034167126962687364905698 \
            "[42559113093733082793542566282911713742375005736614813947385187293220506342480,109370305882734025219925353605107763559738011796832715623096498452877702410736]" \
            "$hash_value" &>> {{ log_file }}
        hash_value="$hash_value$hash_value"
    done

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Sign(uint256,uint256[2],string)" \
            27066115479399555241574240779398896927011581316434074034167126962687364905698 \
            "[42559113093733082793542566282911713742375005736614813947385187293220506342480,109370305882734025219925353605107763559738011796832715623096498452877702410736]" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done

    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - Sign

- name: Testing EIP6565 - SignSlow
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 SignSlow Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SignSlow(uint256,string)" 0 "abc123" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SignSlow(uint256,string)" 1 "abc123" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SignSlow(uint256,string)" \
        115792089237316195423570985008687907853269984665640564039457584007913129639935 \
        "abc123" &>> {{ log_file }}

    hash_value="00112233445566778899AABBCCDDEEFF"
    for i in {1..{{ exponential_growth_limit }}}; do
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SignSlow(uint256,string)" \
            27066115479399555241574240779398896927011581316434074034167126962687364905698 \
            "$hash_value" &>> {{ log_file }}
        hash_value="$hash_value$hash_value"
    done

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "SignSlow(uint256,string)" \
            27066115479399555241574240779398896927011581316434074034167126962687364905698 \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done

    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - SignSlow

# Get a public key
# cast call --rpc-url http://127.0.0.1:32873 0x0a1a630f85f9e58b345f6cb9197c51fa1db01639 'SetKey(uint256)(uint256[5],uint256[2])' "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")"
# [53319167224459106466702007959349135256467467536905411832330885206999252279614, 2284080886966133992729186839123998120798894513958078808115507875162306287204, 3246207250587195530816989123778609896848374867114298476970577533647877040319, 5104207593475419821130674724844498252015686184978827304375352455858058969127, 58862539542128022353275577081232159455015340604490348195085361478951058225917]
# [35849341243594196611585402578871739724534359549608202268592130981855193350768, 109934417611414458827248970371904155695069847997685404682729446397321486897950]
# cast call --rpc-url http://127.0.0.1:32873 0x0a1a630f85f9e58b345f6cb9197c51fa1db01639 "Sign(uint256,uint256[2],string)" 58862539542128022353275577081232159455015340604490348195085361478951058225917 "[35849341243594196611585402578871739724534359549608202268592130981855193350768,109934417611414458827248970371904155695069847997685404682729446397321486897950]" "john hilliard"
# 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad6956e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08
# None of these seem to veriy so something is wrong... But it still takes up space
- name: Testing EIP6565 - Verify
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 Verify Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify(string,uint256,uint256,uint256[5])" "abc123" 0 0 "[1,2,3,4,5]" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify(string,uint256,uint256,uint256[5])" "abc123" 1 1 "[1,2,3,4,5]" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify(string,uint256,uint256,uint256[5])" \
        "john hilliard" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
        "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}

    hash_value="00112233445566778899AABBCCDDEEFF"
    for i in {1..{{ exponential_growth_limit }}}; do
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify(string,uint256,uint256,uint256[5])" \
            "$hash_value" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
            "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}
            hash_value="$hash_value$hash_value"
    done

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify(string,uint256,uint256,uint256[5])" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
            "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - Verify

- name: Testing EIP6565 - Verify_LE
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 Verify_LE Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify_LE(string,uint256,uint256,uint256[5])" "abc123" 0 0 "[1,2,3,4,5]" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify_LE(string,uint256,uint256,uint256[5])" "abc123" 1 1 "[1,2,3,4,5]" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify_LE(string,uint256,uint256,uint256[5])" \
        "john hilliard" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
        "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}

    hash_value="00112233445566778899AABBCCDDEEFF"
    for i in {1..{{ exponential_growth_limit }}}; do
        timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify_LE(string,uint256,uint256,uint256[5])" \
            "$hash_value" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
            "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}
            hash_value="$hash_value$hash_value"
    done

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "Verify_LE(string,uint256,uint256,uint256[5])" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" 0x392ffe32f4b301dd3f77870c863847a53d394ab17d972e0b01fadc45402ad695 0x6e0dfbdf624e7184286c487907f7a389543d0c43ad9e5f27a5c749d4e5e72f08 \
            "[53319167224459106466702007959349135256467467536905411832330885206999252279614,2284080886966133992729186839123998120798894513958078808115507875162306287204,3246207250587195530816989123778609896848374867114298476970577533647877040319,5104207593475419821130674724844498252015686184978827304375352455858058969127,58862539542128022353275577081232159455015340604490348195085361478951058225917]" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - Verify_LE


- name: Testing EIP6565 - ecPow128
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 ecPow128 Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ecPow128(uint256,uint256,uint256,uint256)" 0 0 0 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ecPow128(uint256,uint256,uint256,uint256)" 1 1 1 1 &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ecPow128(uint256,uint256,uint256,uint256)" \
            115792089237316195423570985008687907853269984665640564039457584007913129639935 \
            115792089237316195423570985008687907853269984665640564039457584007913129639935 \
            115792089237316195423570985008687907853269984665640564039457584007913129639935 \
            115792089237316195423570985008687907853269984665640564039457584007913129639935 \
            &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..512}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "ecPow128(uint256,uint256,uint256,uint256)" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - ecPow128


- name: Testing EIP6565 - edCompress
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting EIP6565 edCompress Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" "[0,0]" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" "[1,1]" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" \
            "[115792089237316195423570985008687907853269984665640564039457584007913129639935,115792089237316195423570985008687907853269984665640564039457584007913129639935]" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" \
            "[0,115792089237316195423570985008687907853269984665640564039457584007913129639935]" &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" \
            "[1,115792089237316195423570985008687907853269984665640564039457584007913129639935]" &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" \
            "[0x00,0x$(head -c 31 /dev/urandom | xxd -p | tr -d "\n")]" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    for i in {1..256}; do
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_EIP6565.json.deploy.out)" "edCompress(uint256[2])" \
            "[0x01,0x$(head -c 31 /dev/urandom | xxd -p | tr -d "\n")]" &>> {{ log_file }}
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto EIP6565 - edCompress

- name: Testing RIP7212 - verify
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting RIP7212 verify Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_RIP7212.json.deploy.out)" "verify(bytes32,uint256,uint256,uint256,uint256)" 0x0000000000000000000000000000000000000000000000000000000000000000 0 0 0 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_RIP7212.json.deploy.out)" "verify(bytes32,uint256,uint256,uint256,uint256)" 0x0000000000000000000000000000000000000000000000000000000000000001 1 1 1 1 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_RIP7212.json.deploy.out)" \
            "verify(bytes32,uint256,uint256,uint256,uint256)" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto RIP7212 - verify

- name: Testing ECDSAB4 - verify
  ansible.builtin.shell: |
    pushd {{ work_dir }} || exit 1
    echo "Starting ECDSAB4 verify Tests" &>> {{ log_file }}

    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_ECDSAB4.json.deploy.out)" "verify(bytes32,uint256,uint256,uint256[10],uint256)" 0x0000000000000000000000000000000000000000000000000000000000000000 0 0 [0,0,0,0,0,0,0,0,0,0] 0 &>> {{ log_file }}
    timeout {{ cast_timeout}} cast send {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_ECDSAB4.json.deploy.out)" "verify(bytes32,uint256,uint256,uint256[10],uint256)" 0x0000000000000000000000000000000000000000000000000000000000000001 1 1 [1,1,1,1,1,1,1,1,1,1] 1 &>> {{ log_file }}

    cur_nonce=$(cast nonce --rpc-url {{ rpc_url }} {{ eth_address }})
    for i in {1..256}; do
        set -x
        cast send --async --nonce $cur_nonce {{ legacy_flag }} --private-key {{ private_key }} --rpc-url {{ rpc_url }} --json "$(jq -r '.contractAddress' SCL_ECDSAB4.json.deploy.out)" \
            "verify(bytes32,uint256,uint256,uint256[10],uint256)" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" \
            "[0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n"),0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")]" \
            "0x$(head -c 32 /dev/urandom | xxd -p | tr -d "\n")" &>> {{ log_file }}
        set +x
        cur_nonce=$((cur_nonce + 1))
    done
    popd
  args:
    executable: /bin/bash

- name: Add inscription to mark test end
  ansible.builtin.include_role:
    name: common
    tasks_from: clear_chain
  vars:
    inscription_message: Finished Smooth Crypto ECDSAB4 - verify


